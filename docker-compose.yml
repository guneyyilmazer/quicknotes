version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: quicknotes-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-quicknotes}
      POSTGRES_USER: ${POSTGRES_USER:-quicknotes_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-quicknotes_pass}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-quicknotes_user} -d ${POSTGRES_DB:-quicknotes}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - quicknotes-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: quicknotes-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - quicknotes-network

  # API Instance 1
  api-1:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: quicknotes-api-1
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DATABASE_URL=postgresql://${POSTGRES_USER:-quicknotes_user}:${POSTGRES_PASSWORD:-quicknotes_pass}@postgres:5432/${POSTGRES_DB:-quicknotes}
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-in-production}
      - INSTANCE_ID=api-1
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - quicknotes-network

  # API Instance 2
  api-2:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: quicknotes-api-2
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DATABASE_URL=postgresql://${POSTGRES_USER:-quicknotes_user}:${POSTGRES_PASSWORD:-quicknotes_pass}@postgres:5432/${POSTGRES_DB:-quicknotes}
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-in-production}
      - INSTANCE_ID=api-2
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - quicknotes-network

  # NGINX Load Balancer
  nginx:
    image: nginx:alpine
    container_name: quicknotes-nginx
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api-1
      - api-2
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - quicknotes-network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: quicknotes-frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8080
    depends_on:
      - nginx
    networks:
      - quicknotes-network

volumes:
  postgres_data:
  redis_data:

networks:
  quicknotes-network:
    driver: bridge
